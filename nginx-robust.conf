events {
    worker_connections 1024;
}

http {
    # Configuração de upstream com fallback
    upstream backend {
        server api:3001 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    upstream frontend {
        server frontend:3000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }

    # Configuração de proxy genérica
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_connect_timeout 10s;
    proxy_send_timeout 10s;
    proxy_read_timeout 10s;

    server {
        listen 80;
        server_name _;

        # Health check do backend
        location = /health {
            proxy_pass http://backend/health;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }

        # Rotas da API
        location /api/ {
            proxy_pass http://backend/;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }

        # Rotas de autenticação
        location /auth/ {
            proxy_pass http://backend/auth/;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }

        # Outras rotas da API
        location ~ ^/(room|booking|user|members|scale|analytics|swagger|docs|openapi\.json)/ {
            proxy_pass http://backend;
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }

        # Frontend (todas as outras rotas)
        location / {
            proxy_pass http://frontend;
            proxy_http_version 1.1;
            proxy_set_header Connection "";
            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
        }
    }
}
