version: "3.9"

services:
  # Backend API
  api:
    build:
      context: ./back
      dockerfile: Dockerfile
    ports:
      - "3001:8080"
    env_file:
      - ./back/.env.prod
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network
      - supabase-network

  # Frontend Next.js
  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    env_file:
      - ./front/.env.prod
    volumes:
      - ./front:/app
      # - /app/node_modules
      # - /app/.next
    restart: unless-stopped
    depends_on:
      api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - app-network
      - supabase-network

  # Nginx Reverse Proxy (opcional)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - api
    restart: unless-stopped
    networks:
      - app-network
      - supabase-network

volumes:
  node_modules_api:
  node_modules_frontend:

networks:
  app-network:
    driver: bridge

  supabase-network:
    external: true
    name: supabase_default
